name: CI

on:
  push:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Fetch tags
        # The github checkout is shallow and doesn't have tags.
        run: |
          git fetch --tags

      # Use Go 1.17
      - name: Switch to Go 1.17
        uses: actions/setup-go@v3
        with:
          go-version: '^1.17.0'

      # Get values for cache paths to be used in later steps
      - name: Get Go paths
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-build-

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-mod-

      - name: Go dependencies
        run: |
          make go_dependencies

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install protobuf-compiler

      - name: Build protobuf
        run: |
          make protobuf

      - name: Build binary
        run: |
          make registry

      - name: Test
        run: |
          make test

      - name: Constants for publish
        id: publish
        run: |
          # See if the cmake variant works.
          cmake -DPRINT_VERSION=1 -P tools/gitversion.cmake

          # TODO(florian): Use the cmake version instead.
          export PATH=$PATH:${{ github.workspace }}/tools
          GITVERSION=$(gitversion)
          # Replace all + to - in the version of image tags.
          IMAGE_TAG=$(echo $GITVERSION | sed 's/\+/-/g')

          echo ::set-output name=version::$GITVERSION
          echo ::set-output name=tag::$IMAGE_TAG
          echo $IMAGE_TAG
          echo $GITVERSION

      - name: Authenticate to google cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.INFRASTRUCTURE_SERVICE_ACCOUNT_JSON_KEY }}
          service_account: github-action@infrastructure-220307.iam.gserviceaccount.com

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: infrastructure-220307

      - name: Build Docker Image
        run: |
          gcloud config set project infrastructure-220307
          gcloud auth configure-docker

          make image

      - name: Upload image
        if: |
          github.event_name == 'release' ||
          github.event_name == 'push' && github.ref_name == 'master'
        env:
          GCLOUD_IMAGE_TAG: ${{ steps.publish.outputs.tag }}
        run: |
          make gcloud
